<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAICAAAAEACACoCAAANgAAADAwAAABAAgAqA4AAN4IAAAQEAAAAQAIAGgFAACGFwAAKAAAACAA
        AABAAAAAAQAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAIAAAACAgACAAAAAgACAAICA
        AADAwMAAwNzAAPDKpgAAAA8AAAAeAA8AHgAeDwAADw8PAA8ALQAeDw8ADw8eAA8PLQAeDy0ADw88ADwe
        AAAtHh4AHh4tAB4PSwAeHjwAHh5LAEstDwA8LR4AHh5aAFotDwAtLTwALQ9pAGktDwBaLR4APC08ADw8
        LQAtD3gALR5pAFo8HgAtPEsAPB5pAC0eeAA8LVoAaTweAFo8LQA8LWkAeDweADw8WgBaSy0APB6HAB4e
        pQA8LXgAS0tLADwelgA8LYcASzxpADw8eABLS1oAPC2WAIdLLQB4SzwAS0tpAEstlgAtLbQASzyHAIda
        LQBpWksAWlpaAEtaaQBLLaUASzyWADw8pQBLS4cAeFpLAFpaaQBLWngASy20AEs8pQBaS4cAS0uWAFpa
        eACHaTwASzy0AEtLpQBaWocAeGlaAGlpaQBLPMMAWkulAFpalgB4aWkAaWl4AFpphwBaPMMAWku0AEtL
        wwBaWqUAaWmHAFpplgBaS8MAWlq0AGlplgCleEsAh3hpAHh4eABaS9IAaVq0AFpawwBpaaUAWmm0AId4
        eAB4eIcAaVrDAGlptABaacMAeHiWAGl4pQCHh3gAaVrSAGlpwwBaadIAeHilAJaHeACHh4cAWlrwAGlp
        0gB4eLQAaXjDAKWHeACHh5YAeGnSAHh4wwB4h7QAlpaHAHh40gCllocAlpaWAHh44QCHh8MAeIfSAJaW
        pQCHlrQAeHjwAIeH0gCWlrQAh5bDAJalpQCHh+EAlpbDAIeW0gC0pZYAeIf/AJaW0gCHluEApaW0AJal
        wwDStHgAh4f/AJaW4QCHlvAApaXDAJal0gC0tKUApbS0AJaW8ACWpeEAtLS0AJal8ADDtLQAtLTDAKW0
        0gClpfAApbThAMPDtACltPAA0sO0AMPDwwC0w9IApbT/AMPD0gClw/AAw8PhALTD8AClw/8A0tLDAMPS
        0gC0w/8A4dLDANLS0gDD0uEA0tLhAMPS8AC00v8Aw9L/AOHh4QDS4fAAw+H/AOHh8ADS4f8A4eH/APDw
        4QDh8PAA8PDwAOHw/wDw8P8A8P//AP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPD7
        /wCkoKAAgICAAAAA/wAA/wAAAP//AP8AAAD/AP8A//8AAP///wAAEQAREQxytUEUGVuuscuXiMtpep83
        GEYgMk5kGCYyUwBiz5ubiXKzcTsUNbC5z6mIvG9Mu2UqRiA/ZGQuP0ZkEWLPqol0bahxN0YrgYmql4GI
        aB+FhDtGIEZkUy4/U2pBVb+bcG1fi2QyWXSEio+Kf3t7K1VjPz8gU2Q/KkZkZHc/ZlV0YT9BeKHKypiY
        mJiPvqQpJm03JiBOajI3U2RTbE5QjVVHN23AzPa+YJiemJDNzMBmQXgYMj9kMkZkajROZEFwZD9apsLI
        9pIzQH15tPbHwsKZkEE7TkYyXmRqE0ZOUGxeNFqsosjNvr+VSHXPv5KsrKaWhzdHKjdkZGQMXkd4ZE4q
        lmkcifb29s/Ky78WGyO3lYSoP2FJRmReXwpTcmpkN2GcQmdo9vb2yr7PRFKdUny2Wrh4VFlOZF5aDHGH
        XlM7kHsvL1b29sRtwMMxZy9nQ8ZJqJpkN05eU08PkHdkRlSrSiwhVvbGX2X2pCc8LEIxuk+ar3dOP1NT
        Kgyfd2RfYaQtHiKI9nJNgPaGHiweLByxOZS7fmRGRk4gAJ9+X3hVoxAcycOhWFOEz2kVHhs9dsM4h7WK
        d04/Ri4AlIpflB9EAA5XaXGDTYCbRAAQDbHPvRFjwZR3RjtGcACUil+oSQAADkSOh4pGbToAAAAANXwk
        F5TCpX5GMkanEqWUfq+HXSZy9n+oh3Fuq3wZDgAAADqZpcGofj8yP5sgqJqDuH6Md3iyh8GKinPMtD+W
        uklBcpCowa9+RypBXCCvpYrBfmV4bq2fwoqUZcWZVJKyfqBZgLjBr4NUNyYgJbioisKDUJB4lq/ClKhl
        podstWZ4qEaDwcGsgzdOKiA2u7iUwYdhs2yQu8Klr3iAlHiWZJ+WTpTBwah+Rz8/Kmy7u6W4n3i4eJbB
        wa+vh1SofmGHwq9UlsG7qF9JazQ7pbvBr6i4hLiUpsHBuK+oR7h+X6/CrH61tbifRl9BKnG7wsHBqLuf
        uK+1wcHBuLhxuIqUwcGomsLBwXFxaj8/qLumwsG4uLi4tbXBwcG7wZq4qK/BwaivwcKaeJReP364qFGt
        wsG7u7u1tcHBwcHBuLi7wcHBuMHBrIe7fkZHlLs0EV2mwsHBwbW1wcHBwcHBwcHBwbu7wbiowahkHVmz
        YQsAcEWSwcHCu7W1tbvBwcHBwcHBwcHBu8G7fjQSQVkaKADPfB+Lpaavta+1wcHBwcHBwcHBwcHBu5Q+
        Hz4ZERIXAM/PfD6EUDl4r8LCwsLCwsLBwsLCwrWOsUswYlEXFwAAz8/Pw79cHxJmhaKtraKira2topGT
        sc/Pgj5RYjoLAAAAAAAAAFEwUT4KAAAAAAAAAAAAAAAAAAAAPlFRURIAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoAAAAMAAAAGAA
        AAABAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAMDA
        wADA3MAA8MqmABIAAAAAABIAAAAkABISAAASACQAJBIAABISEgAAEiQANhIAABISJAA2EhIAEhI2ACQk
        EgAkEjYANiQSACQkJAAkEkgASCQSADYkJAAkJDYAJABbACQkSAAkElsAWyQSAEg2JAA2NjYAJBJtACQk
        WwBbNhIANjZIADYSbQA2JFsAJCRtAG02EgBbNiQANiRtAG02JAA2NlsAW0gkAEhISAA2JH8AJCSRADY2
        bQBtSCQANkhbADYkkQAkJKMASDZtADY2fwB/SCQAbUg2AFtISABISFsASCSRADYkowBINn8ANjaRAEhI
        bQAkJLYAW0hbAEgkowBINpEANjajAEhIfwBbSG0Af1s2AG1bSABIW20AW1tbAEg2owBISJEAJDbIAFtI
        fwBIW38AbVtbAFtbbQBISKMASDa2AFtIkQBtW20AW1t/AEg2yABbSKMASEi2ADZIyABIW6MAkW1IAFs2
        tgBbW5EAbW1tAFttfwBbNsgAW0i2AFtbowB/bW0AbW1/AFttkQCjf0gAW0jIAG1tkQBbbaMAW1u2AFtI
        2gB/bZEAbW2jAKN/WwCRf20Af39/AG1/kQBbW8gAf22jAJF/fwB/f5EAbX+jAG1byABbW9oAbW22AH9/
        owCjkW0Af5GRAG1b2gBtbcgAbX+2ALaRWwCjkX8AkZGRAH+RowBtbdoAW23sAH9/tgBtf8gAkZGjAH9t
        2gB/f8gAbX/aAH+RtgCjo5EAkaOjAH9/2gBtf+wAkZG2AH+RyADIo20Ao6OjAH9/7AB/kdoAtqORAG1/
        /wDItm0AkZHaAH+R7AC2o6MAo6O2AJGjyAB/o9oAf3//AJGR7ACjo8gAkaPaAH+j7AB/kf8A2rZ/ALa2
        owCjtrYAkaPsAKO2yADayH8Atra2AKOj7ACjttoAkbbsAMi2tgC2tsgAo6P/AKO27ADItsgAyMi2ALbI
        yACjyOwAtrbsAKO2/wDayLYAyMjIALbI2gDayMgAyMjaALbI7ACjyP8Atrb/ANrayADI2toAtsj/ANra
        2gDI2uwAyMj/ALba/wDa2uwAyNr/AOzs2gDa7OwA2tr/AOzs7ADa7P8A7Oz/AP//7ADs//8A////AAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8Pv/AKSg
        oACAgIAAAAD/AAD/AAAA//8A/wAAAP8A/wD//wAA////AAAqAAAAZBAAOozNrjIlEzZFrMKs09i/dLXY
        0EWEvqZGJSBsNyA/T2xsRg5PMkZsVwBSotjYiKLYSX7JslZXIAwdtcK109jCdLXW0z1axb5PMiRsMiBG
        T2xsMkNXMmFsVwBtetjYiKLTYme+pm9PRioLeaHHwtjHdIaGoU4nkc1vNypsLSBGV2xsLTlPN2xmYQuN
        YtjYf42Zb2KymncyRmwpdICSaLm1dJychlQTQ6OUTzJmJC1PYWxhJUFGT2xmVzqNUNPYdnqZd1yXm08y
        QFckWXh+iZWQcnl0hoZFKW1uVk9PIDJXZmxXIE9GZmxsMndaR8rTSY2NcE9im2w3WJbDp52qqqWlpYmH
        hlQgIHtuNE83IC1hZmxGIE9PbGZsF3dPT21aWI1yZjc6T2en0dfYs52lpaWlqonL040tHkl+XDItIDJP
        bGw3LVdXbGxmC3xmQmGZYm1YT08tf87V1dXXhIqqpaWlpYTT1dXLciAylDofGk9CbGwtN1dmZmxPAHdP
        YUfTYlhmTy2jvcTU1dXXX1GKpaqqia/X1NLP0qdBfoMqKmFCT2wkT2FsZmxYAE9PZjKHYmxXLXufrszS
        1dfBODhEXoqKe9PV1M/JxsnEbrc6LU9PMlcqZmZsZmx6AE9sT09nbGxPOWKbyc/U1dWvr7Z7SEQzu9fX
        1M/Jvp+4l66DMk9PNzIybGZmZmaxAGFmN253ZWE3JXLPcj6n19XX19fXyn+N19eZIx1yxriWn4++Mk9B
        RyBGbGxhbE/KF2xPYolhbE8yOr56Gywj1dfX19fX19fX2KIAGyYKe9SNi37Nb0Bnfy1XbGxXbFixIGxH
        l2xmbEI3fsQwhZgsw9fX19fX08vX0xkwq7BgGc7Ean7JpjdXbkdPbGZPbG1ZFVeEiVdsVzJPuHlLO0sw
        u9fX19fLf8vYmQ+Yc2CeG5nXYla+vk9mR09PbGFPbHolAGeybGxsT09Wz0xLLjssttfX18FPjNfYTjVr
        KytgS1TYfzKyyXd3T0dPbE9XXEopAI+gYWxmR2Z+yyw7Ljsiu9fXwU9PuNfVHEs7Li47SyPTjSquzZR3
        Zk9PZk9hRyBxALh8d2xPT2+Nuhs1GywiztfOXFtWvNjKFks1Li4uSxzTaTemzaZ3d09PYUZsMiDAALhs
        iWxPfFyZmRgsGyxo1ddyV2Ffzdi7FDUuGxsuLBnTYzKUzbJ8iVdPTz9sMinYALJslFdWmkGxdQ8PaNPK
        16dPbFdnz9iZDywhISEhPGjXdSqUybiJiWVPTz9mKGnYAKZ3lE9vjxOsVAAAddjArVx3bFdno9iZABgY
        GBJ507XYYyVns8mOlGVPP0ZhILbYGpqJiVaDsgsxIwAAABkZf2GmbFdukWN1AAoNDQrA2NjTGQtiycmU
        oGFPMkZXKdO5T5SUiVyUvjoAAAAAACOxZ5SuYWFQkRAAAAAAAAAjmbFOACWaycmmpmFPMk9PSthabJSm
        iW+uuG9TAAsXkdjIVrimZmZQl4EjAAAAAAAAAAAAWX6mycmupmVPLU9Geso3N5SuiXyyvmaoYlddxdN/
        g82Ud4lWuMjAjSUZEAAAAAtTy36uycWypmxWJFc3mXEyJKayiYO4vmakfndmqLt+rs2UiZRPtNfRWk+k
        0bE0STJnp4Oyyb64lHdPIFcymS0kMrKylIO+vmaEb45Wl8uDvs2UiaZPqdXDbzqE18hPt4JcjIO4yb7F
        iYlPLTItRSQkT7iypoPFyXdnd35WrrOUyc2mjrJPm9R/iV2Ru3JsxYlWZ5S+ycXJiYlHT0cgICQyV8Wy
        soPFyYlWZ6h3jKOuycmujr5PjLxypk+yyy1czZpPT67Jycm+iYktR2YgICRPd8myvoPFzY5Hg758Z6i4
        ycmyjslvg5t+sk+4p1d+o5RmT7jJycmylG9HR09CIDJXpsm4yY64zY9WlMmOT6i+ycm+lM2Jb4OUsk+o
        Z3e+xH5Hb8nJycmmpkdQVipXJUaCycnFyaauzbJnm8mmVrLJycnJoMmuVmeusmZuZqDJya5WZ8TJycWu
        mjJJlEc3MleyycXJxbimzclvn8myZ7jJycnJrr6+Zke+vlxPjrjJya5vn7i4ybK4b09PYmcqMonNrsXJ
        ycmmxcmMqL6+fsnJycnJuLLNg0++xWZmssnJybJvvsm8xb6uQGZsRi0tbL6+t8nJycm4ss2urr7JqMnJ
        ycnJybjNpmbFyXeOycnJxa6UycnJxclvT4lmbCpGmr64uM3JycnJssm+rsXJqMnJycnJyb7Jvny+yYmy
        ycnJyaayycnJzaZApolhVzKCrr7JYn/NycnJxb7JuL7Js8nJycnJycnJyaa4ya7FycnJya7JycnJuFeU
        vmxsT0+Urs2UDlWRzcnJycXJycXJs8nJycnJycnJyb64ycnJycnJxbjJycnJg6DNpldmMneJzbIlCydV
        kcnJycnJycnJs8nJycnJycnJycnJycnJycnJycnJycmgrs3Jd2wqJX24vkITLwBVVX/JycnJycnJs8XJ
        ycnJycnJycnJycnJycnJycnJybi+yc2mZVYTT5q+Zg4MEwDKTUNtuMnJycnJuLi4uLjJycnJycnJycnJ
        ycnJycnJycnJybh3bxMTNEdmJR0vQwDYyj4fVbiyyc3NzcnJuLzJycnJycnJycnJycnJycnJycnJuI5n
        HT4vExMXDB9DLwDY2NM+HXugg26Mn5+osr7JycnJycnJycnJycnJycnJycm+pn8nE1pkVR0ME051AADY
        2NjTVSdylFAvN46+ycnJycnJycnJycnJycnJycnNzbiNsdhVHVVaZFoTDGPYAADY2NjY07GxsVVVDBVi
        qLzNzc3Nzc3Jzc3Nzc3NybijjbHY2Nh1L1VaWmQvDB3YAADY2NjY2NjYsVo2ER9VLx2NoqKZmaK2mZON
        jY2TmcDT2NjY2NixVVVVWlpVEwzAAADY2NjY2NjYWVovQ2RkHx3T2NjY2NjY2NjY2NjY2NjY2NjY2NjY
        WWRNQ2RkHQxjAAAAAAAAAAAQZFVaZGRDEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABM+Ly9kQxMLAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACgAAAAQAAAAIAAAAAEACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAMDcwADwyqYAORgIACAgKQApKTEAKSlBAEox
        IAApKVoAMTlKADEYcwA5MVIAQUpBADkggwA5KXsASkFSAHNKIABBKXsAOTGDAFJSSgA5MYsAUkpaAEpK
        YgBBKZQAQUGDAEpSagBBMZwAUjmDAFJKcwBaWmIASjGcAEoxpABKUoMAe1pKAEo5pABiYmoASjmsAFJB
        nABaUoMAe2pKAFJKlABKObQAUkGkAINqSgBqamoAUkGsAFpaiwBaSpwAUkqkAFJBtABqanMAUjm9AGJi
        iwBSQb0AYlKcAFJSrABaSrQAWlKsAFpapABzansAi3NaAHNzcwBaQcUAWlK0AINzagBiWrQAamqcAIt7
        agBaSs0AYmK0AHN7iwBzc5wAg3uLAIODgwBqYsUAamq9AGpqxQCLg4sAc2rFAHN7tAB7g6QAWmLuAHNq
        zQB7e7QAe4OsAIuLlABzc8UAc2rVAIODrACci4sAg4ukAHuLrABzc80Ai3u0AHN7zQB7e80Ae4PFAIuL
        tAB7e9UAg4u9AHtz3gB7g9UAnJycAIOD1QCLi8UAg4vNAIuLzQCDi9UApJykAIOL3gBze/8Ai4veAIuU
        1QCkpKwAnJy9AIuL5gCLlN4AnKS9AKysrACLlOYAtLSsAKSkzQCUnOYAtLS0AMW0pACcpO4ApKzeAJyk
        9gCkrOYAnKzuAL29vQCkrPYApLTuAKS09gDVxbQAxcXVAKzF9gDNzc0Axc3VAKy9/wCsxf8Avc3mALTF
        /wDe1cUAtM3/AM3V5gDF1e4Avc3/AM3V7gC91f8A1d7eANXe9gDm9vYA////AAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADw+/8ApKCgAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AFnhNexkWlo2DV0wUHisZOkmOX0w0SW9xYBxBFCYmJis4TjZBm5RYdZmAPRUhIUUVK0ghapiY
        Z3eRhYdMGyFLLUY8PkdKoJ+dLjJ5cjcpRSNjMFoXQ55ughcXVHtZJisSaz9CDn9VaWAKKHNWeislT2Np
        EAthXkwTABozVoYmNmR0flJSh3RmfDsjL4qKJiIYiIRTXYiIbG5wblGMijERIZKIcnSLlWxlUYRdj4Es
        GXSakoqLk5eIdn6VhJdpOECMYpqXj5WXlZKVlZWMfit6JypbjJWPlZeXl5eXk1IPHw2JkGg1Z5qcnJyc
        nJ5PIA0kRIJtHRI5XFxcXG19UB0dDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>